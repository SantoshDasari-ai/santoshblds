name: Auto-merge Dependabot PRs

on:
  pull_request:
    types: [opened, synchronize, reopened]
  schedule:
    # Run every Tuesday at 10:00 AM UTC to process any pending Dependabot PRs
    - cron: "0 10 * * 2"
  workflow_dispatch: # Allow manual triggering

permissions:
  contents: write
  pull-requests: write
  checks: read

jobs:
  auto-merge:
    runs-on: ubuntu-latest
    # Only run on Dependabot PRs
    if: github.actor == 'dependabot[bot]' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Find Dependabot PRs
        id: find-prs
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Looking for open Dependabot PRs..."

          if [ "${{ github.event_name }}" = "pull_request" ]; then
            # If triggered by PR, only process the current PR
            PR_NUMBERS="${{ github.event.number }}"
            echo "Processing current PR: $PR_NUMBERS"
          else
            # If scheduled or manual, process all open Dependabot PRs
            PR_NUMBERS=$(gh pr list --author "dependabot[bot]" --state open --json number --jq '.[].number' | tr '\n' ' ')
          fi

          if [ -z "$PR_NUMBERS" ]; then
            echo "No open Dependabot PRs found"
            echo "has_prs=false" >> $GITHUB_OUTPUT
          else
            echo "Found Dependabot PRs: $PR_NUMBERS"
            echo "has_prs=true" >> $GITHUB_OUTPUT
            echo "pr_numbers=$PR_NUMBERS" >> $GITHUB_OUTPUT
          fi

      - name: Setup Node.js for testing
        if: steps.find-prs.outputs.has_prs == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Process Dependabot PRs
        if: steps.find-prs.outputs.has_prs == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          for PR_NUMBER in ${{ steps.find-prs.outputs.pr_numbers }}; do
            echo "Processing PR #$PR_NUMBER"
            
            # Get PR details
            PR_DETAILS=$(gh pr view $PR_NUMBER --json title,body,headRefName,labels)
            PR_TITLE=$(echo "$PR_DETAILS" | jq -r '.title')
            PR_LABELS=$(echo "$PR_DETAILS" | jq -r '.labels[].name' | tr '\n' ' ')
            
            echo "PR Title: $PR_TITLE"
            echo "PR Labels: $PR_LABELS"
            
            # Enhanced auto-merge logic
            SAFE_AUTO_MERGE="false"
            MERGE_REASON=""
            
            # Check for security updates (highest priority)
            if echo "$PR_TITLE" | grep -qiE "(security|vulnerability|CVE-|GHSA-)"; then
              echo "üîí Security update detected - auto-merging"
              SAFE_AUTO_MERGE="true"
              MERGE_REASON="Security update"
            
            # Check for patch updates (very safe)
            elif echo "$PR_TITLE" | grep -qiE "patch|fix"; then
              echo "üîß Patch update detected - auto-merging"
              SAFE_AUTO_MERGE="true"
              MERGE_REASON="Patch update"
            
            # Check for development dependencies (safer to auto-merge)
            elif echo "$PR_LABELS" | grep -qiE "development|dev-dependencies"; then
              echo "üõ†Ô∏è Development dependency update - auto-merging"
              SAFE_AUTO_MERGE="true"
              MERGE_REASON="Development dependency"
            
            # Check for minor updates of specific safe packages
            elif echo "$PR_TITLE" | grep -qiE "(minor|bump).*(@types/|eslint|typescript|vite|tailwind|postcss|autoprefixer)"; then
              echo "üì¶ Safe minor update detected - auto-merging"
              SAFE_AUTO_MERGE="true"
              MERGE_REASON="Safe minor update"
            
            # Check for grouped updates (our new dependabot config creates these)
            elif echo "$PR_TITLE" | grep -qiE "(production-dependencies|development-dependencies|security-updates)"; then
              echo "üì¶ Grouped dependency update - auto-merging"
              SAFE_AUTO_MERGE="true"
              MERGE_REASON="Grouped dependency update"
            
            # Check for very small version bumps (likely safe)
            elif echo "$PR_TITLE" | grep -qE "from [0-9]+\.[0-9]+\.[0-9]+ to [0-9]+\.[0-9]+\.[0-9]+"; then
              echo "üîÑ Small version bump detected - auto-merging"
              SAFE_AUTO_MERGE="true"
              MERGE_REASON="Small version bump"
            
            else
              echo "‚ö†Ô∏è Requires manual review - major update or unknown pattern"
              SAFE_AUTO_MERGE="false"
              MERGE_REASON="Manual review required"
            fi
            
            if [ "$SAFE_AUTO_MERGE" = "true" ]; then
              # Wait for status checks to complete
              echo "‚è≥ Waiting for status checks..."
              sleep 30
              
              # Check if all status checks are passing
              STATUS_CHECKS=$(gh pr status $PR_NUMBER --json statusCheckRollup --jq '.statusCheckRollup[]?.state // "PENDING"')
              
              if echo "$STATUS_CHECKS" | grep -qvE "^(SUCCESS|EXPECTED|SKIPPED)$"; then
                echo "‚ùå Status checks not all passing for PR #$PR_NUMBER"
                echo "Status checks: $STATUS_CHECKS"
                
                # Add comment explaining why auto-merge failed
                gh pr comment $PR_NUMBER --body "ü§ñ **Auto-merge Status**: Waiting for status checks to pass before auto-merging this $MERGE_REASON."
                
              else
                echo "‚úÖ All checks passed - auto-merging PR #$PR_NUMBER"
                echo "Reason: $MERGE_REASON"
                
                # Merge the PR
                if gh pr merge $PR_NUMBER --auto --squash --subject "chore: $PR_TITLE"; then
                  echo "üéâ Successfully enabled auto-merge for PR #$PR_NUMBER"
                else
                  echo "‚ùå Failed to enable auto-merge for PR #$PR_NUMBER"
                  gh pr comment $PR_NUMBER --body "ü§ñ **Auto-merge Failed**: Unable to enable auto-merge. Please check PR requirements."
                fi
              fi
            else
              echo "‚ö†Ô∏è PR #$PR_NUMBER requires manual review"
              echo "Reason: $MERGE_REASON"
              
              # Add labels for manual review
              gh pr edit $PR_NUMBER --add-label "review-required,manual-merge"
              
              # Add helpful comment
              gh pr comment $PR_NUMBER --body "ü§ñ **Manual Review Required**: This PR contains changes that require manual review before merging. Reason: $MERGE_REASON"
            fi
            
            echo "---"
          done

      - name: Summary
        if: always()
        run: |
          echo "## üìã Dependabot Auto-merge Summary"
          if [ "${{ steps.find-prs.outputs.has_prs }}" = "true" ]; then
            echo "‚úÖ Processed Dependabot PRs: ${{ steps.find-prs.outputs.pr_numbers }}"
            echo "Safe updates have been auto-merged, others marked for review"
          else
            echo "‚ÑπÔ∏è No open Dependabot PRs found"
          fi
