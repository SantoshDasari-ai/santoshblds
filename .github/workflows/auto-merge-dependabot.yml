name: Auto-merge Dependabot PRs

on:
  schedule:
    # Run every Tuesday at 10:00 AM UTC to process any pending Dependabot PRs
    - cron: "0 10 * * 2"
  workflow_dispatch: # Allow manual triggering

permissions:
  contents: write
  pull-requests: write
  checks: read

jobs:
  auto-merge:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Find Dependabot PRs
        id: find-prs
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Looking for open Dependabot PRs..."

          # Get list of open Dependabot PRs
          DEPENDABOT_PRS=$(gh pr list --author "dependabot[bot]" --state open --json number,title,headRefName --jq '.[].number' | tr '\n' ' ')

          if [ -z "$DEPENDABOT_PRS" ]; then
            echo "No open Dependabot PRs found"
            echo "has_prs=false" >> $GITHUB_OUTPUT
          else
            echo "Found Dependabot PRs: $DEPENDABOT_PRS"
            echo "has_prs=true" >> $GITHUB_OUTPUT
            echo "pr_numbers=$DEPENDABOT_PRS" >> $GITHUB_OUTPUT
          fi

      - name: Process Dependabot PRs
        if: steps.find-prs.outputs.has_prs == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          for PR_NUMBER in ${{ steps.find-prs.outputs.pr_numbers }}; do
            echo "Processing PR #$PR_NUMBER"
            
            # Get PR details
            PR_DETAILS=$(gh pr view $PR_NUMBER --json title,body,headRefName)
            PR_TITLE=$(echo "$PR_DETAILS" | jq -r '.title')
            
            echo "PR Title: $PR_TITLE"
            
            # Determine if this is a safe auto-merge candidate based on title
            SAFE_AUTO_MERGE="false"
            
            if echo "$PR_TITLE" | grep -qE "(patch|fix)"; then
              echo "‚úÖ Patch update detected - safe for auto-merge"
              SAFE_AUTO_MERGE="true"
            elif echo "$PR_TITLE" | grep -qE "minor.*dev" || echo "$PR_TITLE" | grep -qE "development"; then
              echo "‚úÖ Development dependency minor update - safe for auto-merge"
              SAFE_AUTO_MERGE="true"
            else
              echo "‚ö†Ô∏è Requires manual review"
              SAFE_AUTO_MERGE="false"
            fi
            
            if [ "$SAFE_AUTO_MERGE" = "true" ]; then
              # Check if all status checks are passing
              STATUS=$(gh pr status $PR_NUMBER --json statusCheckRollup --jq '.statusCheckRollup[0].state // "PENDING"')
              
              if [ "$STATUS" = "SUCCESS" ]; then
                echo "‚úÖ All checks passed - enabling auto-merge for PR #$PR_NUMBER"
                gh pr merge $PR_NUMBER --auto --squash --subject "chore: $PR_TITLE"
              else
                echo "‚è≥ Status checks not ready for PR #$PR_NUMBER (Status: $STATUS)"
              fi
            else
              echo "‚ö†Ô∏è PR #$PR_NUMBER requires manual review"
              # Add label for manual review
              gh pr edit $PR_NUMBER --add-label "review-required"
            fi
            
            echo "---"
          done

      - name: Summary
        if: always()
        run: |
          echo "## üìã Dependabot Auto-merge Summary"
          if [ "${{ steps.find-prs.outputs.has_prs }}" = "true" ]; then
            echo "‚úÖ Processed Dependabot PRs: ${{ steps.find-prs.outputs.pr_numbers }}"
            echo "Safe updates have been auto-merged, others marked for review"
          else
            echo "‚ÑπÔ∏è No open Dependabot PRs found"
          fi
